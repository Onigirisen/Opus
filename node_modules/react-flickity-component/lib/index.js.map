{"version":3,"sources":["../src/index.js"],"names":["canUseDOM","window","document","createElement","FlickityComponent","props","state","flickityReady","flickityCreated","cellCount","carousel","flkty","prevProps","prevState","children","options","draggable","initialIndex","reloadOnUpdate","disableImagesLoaded","isActive","deactivate","selectedIndex","undefined","length","activate","reloadCells","Flickity","require","flickityRef","setReady","setState","setFlickityToReady","mountNode","querySelector","element","setTimeout","React","elementType","className","ref","c","renderPortal","Children","count","Component","propTypes","PropTypes","array","string","bool","func","object","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport imagesloaded from 'imagesloaded';\nimport PropTypes from 'prop-types';\n\nconst canUseDOM = !!(\n  typeof window !== 'undefined' &&\n  window.document &&\n  window.document.createElement\n);\n\nclass FlickityComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      flickityReady: false,\n      flickityCreated: false,\n      cellCount: 0,\n    };\n\n    this.carousel = null;\n    this.flkty = null;\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    const cellCount = React.Children.count(props.children);\n    if (cellCount !== state.cellCount)\n      return { flickityReady: false, cellCount };\n    return null;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const {\n      children,\n      options: { draggable, initialIndex },\n      reloadOnUpdate,\n      disableImagesLoaded,\n    } = this.props;\n    const { flickityReady } = this.state;\n    if (reloadOnUpdate || (!prevState.flickityReady && flickityReady)) {\n      const isActive = this.flkty.isActive;\n      this.flkty.deactivate();\n      this.flkty.selectedIndex = initialIndex || 0;\n      this.flkty.options.draggable =\n        draggable === undefined\n          ? children\n            ? children.length > 1\n            : false\n          : draggable;\n      if (isActive) this.flkty.activate();\n      if (!disableImagesLoaded && this.carousel) {\n        imagesloaded(this.carousel, () => {\n          this.flkty.reloadCells();\n        });\n      }\n    } else {\n      this.flkty.reloadCells();\n    }\n  }\n\n  componentDidMount() {\n    if (!canUseDOM) return null;\n    const Flickity = require('flickity');\n    const { flickityRef, options } = this.props;\n    this.flkty = new Flickity(this.carousel, options);\n    if (flickityRef) flickityRef(this.flkty);\n    if (this.props.static) {\n      this.setReady();\n    } else {\n      this.setState({ flickityCreated: true });\n    }\n  }\n\n  setReady() {\n    if (this.state.flickityReady) return;\n    const setFlickityToReady = () => this.setState({ flickityReady: true });\n    if (this.props.disableImagesLoaded) setFlickityToReady();\n    else imagesloaded(this.carousel, setFlickityToReady);\n  }\n\n  renderPortal() {\n    if (!this.carousel) return null;\n    const mountNode = this.carousel.querySelector('.flickity-slider');\n    if (mountNode) {\n      const element = createPortal(this.props.children, mountNode);\n      setTimeout(() => this.setReady(), 0);\n      return element;\n    }\n  }\n\n  render() {\n    return React.createElement(\n      this.props.elementType,\n      {\n        className: this.props.className,\n        ref: (c) => {\n          this.carousel = c;\n        },\n      },\n      this.props.static ? this.props.children : this.renderPortal()\n    );\n  }\n}\n\nFlickityComponent.propTypes = {\n  children: PropTypes.array,\n  className: PropTypes.string,\n  disableImagesLoaded: PropTypes.bool,\n  elementType: PropTypes.string,\n  flickityRef: PropTypes.func,\n  options: PropTypes.object,\n  reloadOnUpdate: PropTypes.bool,\n  static: PropTypes.bool,\n};\n\nFlickityComponent.defaultProps = {\n  className: '',\n  disableImagesLoaded: false,\n  elementType: 'div',\n  options: {},\n  reloadOnUpdate: false,\n  static: false,\n};\n\nexport default FlickityComponent;\n"],"file":"index.js"}